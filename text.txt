try {
        const response = await fetch(`http://localhost:3000/users?email=${email}`);
        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
        const users = await response.json();
        if (users.length === 0) {
            alert('User not found!');
            return;
        }
        const user = users[0];

        switch (event.target.id) {
            case 'approve-btn':
                if (confirm(`Approve Campaigner role for ${user.username}?`)) {
                    await fetch(`http://localhost:3000/users/${user.id}`, {
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ role: 'Campaigner' })
                    });
                    alert('User role updated to Campaigner!');
                }
                break;

            case 'reject-btn':
                if (confirm(`Reject Campaigner role for ${user.username}?`)) {
                    await fetch(`http://localhost:3000/users/${user.id}`, {
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ role: 'Backer' })
                    });
                    alert('User role updated to Backer!');
                }
                break;

            case 'ban-btn':
                if (confirm(`Ban ${user.username}?`)) {
                    await fetch(`http://localhost:3000/users/${user.id}`, {
                        method: 'DELETE'
                    });
                    alert('User banned!');
                }
                break;

            default:
                return;
        }